name: ui-tests

on:
  workflow_run:
    workflows: ["notify-ui-test"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: haya14busa/action-workflow_run-status@v1

      - name: checkout
        uses: actions/checkout@v2

      - name: cached dependencies
        uses: actions/cache@v2
        id: cached-dependencies
        with:
          path: |
            ./vendor
            ./tawkto/vendor
          # the key will change if composer.lock changes
          key: ${{ runner.os }}-composer-dependencies-${{ hashFiles('**/composer.lock') }}

      - name: install dependencies
        if: steps.cached-dependencies.outputs.cache-hit != 'true'
        uses: php-actions/composer@v6
        with:
          php_extensions: zip
          command: run build

  tests:
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        browser: ['chrome', 'firefox', 'edge']

    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: somewordpress
          MYSQL_DATABASE: wordpress
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
      wordpress:
        image: wordpress:latest
        env:
          WORDPRESS_DB_HOST: db:3306
          WORDPRESS_DB_NAME: wordpress
          WORDPRESS_DB_USER: wordpress
          WORDPRESS_DB_PASSWORD: wordpress
          WORDPRESS_DEBUG: 1
          WORDPRESS_CONFIG_EXTRA: |
            define('WP_HOME', 'http://localhost:8000');
            define('WP_SITEURL', 'http://localhost:8000');
            define('FORCE_SSL_ADMIN', false);
        ports:
          - 8000:80
        volumes:
          - wp_data:/var/www/html
    steps:
      - uses: haya14busa/action-workflow_run-status@v1

      - name: checkout
        uses: actions/checkout@v2

      - name: Ubuntu - Install Edgedriver
        run: |
          wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -;
          sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main";
          sudo apt install microsoft-edge-stable;
          MS_EDGE_VERSION=$(microsoft-edge --version);
          MS_EDGE_DRIVER_VERSION=$(echo $MS_EDGE_VERSION | rev | cut -d ' ' -f '1' | rev);
          mkdir /tmp/edgedriver;
          wget -O /tmp/edgedriver/edgedriver.zip https://msedgedriver.azureedge.net/$MS_EDGE_DRIVER_VERSION/edgedriver_linux64.zip;
          sudo unzip /tmp/edgedriver/edgedriver.zip -d /tmp/edgedriver/;
          sudo cp /tmp/edgedriver/msedgedriver /usr/local/bin/;
        if: matrix.browser == 'edge'

      - name: Start Selenium Server
        run: java -jar $SELENIUM_JAR_PATH standalone &

      - name: install wordpress
        run: |
          docker run --rm \
          --volumes-from ${{ job.services.wordpress.id }} \
          --network ${{ job.container.network }} \
          -e WORDPRESS_DB_HOST=db:3306 \
          -e WORDPRESS_DB_NAME=wordpress \
          -e WORDPRESS_DB_USER=wordpress \
          -e WORDPRESS_DB_PASSWORD=wordpress \
          wordpress:cli \
          wp core install \
          --path="/var/www/html" \
          --url=http://localhost:8000 \
          --title="Local Wordpress By Docker" \
          --admin_user=admin \
          --admin_password=admin \
          --admin_email=admin@example.com

      - name: setup wordpress
        run: |
          docker run --rm \
          -u 33 \
          -e HOME=/tmp \
          --rm \
          --volumes-from ${{ job.services.wordpress.id }} \
          --network ${{ job.container.network }} \
          -e WORDPRESS_DB_HOST=db:3306 \
          -e WORDPRESS_DB_NAME=wordpress \
          -e WORDPRESS_DB_USER=wordpress \
          -e WORDPRESS_DB_PASSWORD=wordpress \
          wordpress:cli \
          /bin/bash -c \
          "wp rewrite structure /%postname%/ &&
          wp term create category Category-A --description='Category A' &&
          wp term create category Category-B --description='Category B' &&
          wp term create category Category-C --description='Category C' &&
          wp post term add 1 post_tag tag-a tag-b tag-c;"

      - name: setup woocommerce
        run: |
          docker run \
          -u 33 \
          -e HOME=/tmp \
          --rm \
          --volumes-from ${{ job.services.wordpress.id }} \
          --network ${{ job.container.network }} \
          -e WORDPRESS_DB_HOST=db:3306 \
          -e WORDPRESS_DB_NAME=wordpress \
          -e WORDPRESS_DB_USER=wordpress \
          -e WORDPRESS_DB_PASSWORD=wordpress \
          wordpress:cli \
          /bin/bash -c \
          "wp plugin install woocommerce --activate &&
          wp theme install storefront --activate &&
          wp plugin install wordpress-importer --activate &&
          wp import wp-content/plugins/woocommerce/sample-data/sample_products.xml --authors=skip &&
          wp wc product_tag create --name=product-tag-a --user=admin;"

      - name: setup woocommerce profile
        run: |
          docker run \
          -u 33 \
          -e HOME=/tmp \
          --rm \
          --volumes-from ${{ job.services.wordpress.id }} \
          --network ${{ job.container.network }} \
          -e WORDPRESS_DB_HOST=db:3306 \
          -e WORDPRESS_DB_NAME=wordpress \
          -e WORDPRESS_DB_USER=wordpress \
          -e WORDPRESS_DB_PASSWORD=wordpress \
          wordpress:cli \
          /bin/bash -c \
          "wp option set woocommerce_store_address '123 Main Street' &&
          wp option set woocommerce_store_address_2 '' &&
          wp option set woocommerce_store_city 'Toronto' &&
          wp option set woocommerce_default_country 'CA:ON' &&
          wp option set woocommerce_store_postalcode 'A1B2C3' &&
          wp option set woocommerce_currency 'CAD' &&
          wp option set woocommerce_product_type 'physical' &&
          wp option set woocommerce_allow_tracking 'no' &&
          wp wc --user=admin tool run install_pages;"

      - name: cached dependencies
        uses: actions/cache@v2
        id: cached-dependencies
        with:
          path: |
            ./vendor
            ./tawkto/vendor
          # the key will change if composer.lock changes
          key: ${{ runner.os }}-composer-dependencies-${{ hashFiles('**/composer.lock') }}

      - name: prepare test artifact
        run: zip -9 -rq tawkto-live-chat.zip tawkto

      - name: run tests
        env:
          TAWK_PROPERTY_ID: ${{ secrets.TAWK_PROPERTY_ID }}
          TAWK_WIDGET_ID: ${{ secrets.TAWK_WIDGET_ID }}
          TAWK_USERNAME: ${{ secrets.TAWK_USERNAME }}
          TAWK_PASSWORD: ${{ secrets.TAWK_PASSWORD }}
          WEB_HOST: localhost
          WEB_PORT: 8000
          SELENIUM_BROWSER: ${{ matrix.browser }}
          SELENIUM_HOST: localhost
          SELENIUM_PORT: 4444
        run: composer run test
