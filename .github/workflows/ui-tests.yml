name: ui-tests

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: cached dependencies
        uses: actions/cache@v2
        id: cached-dependencies
        with:
          path: ./vendor
          # the key will change if composer.lock changes
          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/composer.lock') }}

      - name: install dependencies
        if: steps.cached-dependencies.outputs.cache-hit != 'true'
        uses: php-actions/composer@v6
        with:
          php_extensions: zip

  tests:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        browser: ['chrome', 'firefox', 'safari']
    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: somewordpress
          MYSQL_DATABASE: wordpress
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
      wordpress:
        image: wordpress:latest
        env:
          WORDPRESS_DB_HOST: db:3306
          WORDPRESS_DB_NAME: wordpress
          WORDPRESS_DB_USER: wordpress
          WORDPRESS_DB_PASSWORD: wordpress
        ports:
          - 8000:80
        volumes:
          - wp_data:/var/www/html
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: 'BrowserStack Env Setup'
        uses: 'browserstack/github-actions/setup-env@master'
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          project-name: tawk-wordpress
          build-name: ${{ matrix.browser }}-ui-test

      - name: 'Start BrowserStackLocal Tunnel'
        uses: 'browserstack/github-actions/setup-local@master'
        with:
          local-testing: 'start'
          local-logging-level: 'all-logs'
          local-identifier: 'random'

      - name: install wordpress
        run: |
          docker run --rm \
          --volumes-from ${{ job.services.wordpress.id }} \
          --network ${{ job.container.network }} \
          -e WORDPRESS_DB_HOST=db:3306 \
          -e WORDPRESS_DB_NAME=wordpress \
          -e WORDPRESS_DB_USER=wordpress \
          -e WORDPRESS_DB_PASSWORD=wordpress \
          wordpress:cli \
          wp core install \
          --path="/var/www/html" \
          --url=http://localhost:8000 \
          --title="Local Wordpress By Docker" \
          --admin_user=admin \
          --admin_password=admin \
          --admin_email=admin@example.com

      - name: setup wordpress
        run: |
          docker run --rm \
          --volumes-from ${{ job.services.wordpress.id }} \
          --network ${{ job.container.network }} \
          -e WORDPRESS_DB_HOST=db:3306 \
          -e WORDPRESS_DB_NAME=wordpress \
          -e WORDPRESS_DB_USER=wordpress \
          -e WORDPRESS_DB_PASSWORD=wordpress \
          wordpress:cli \
          /bin/bash -c \
          "wp rewrite structure /%postname%/; \
          wp term create category Category-A --description="Category A"; \
          wp term create category Category-B --description="Category B"; \
          wp term create category Category-C --description="Category C"; \
          wp post term add 1 post_tag tag-a tag-b tag-c;"

      - name: add category

      - name: cached dependencies
        uses: actions/cache@v2
        id: cached-dependencies
        with:
          path: ./vendor
          # the key will change if composer.lock changes
          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/composer.lock') }}

      - name: prepare test artifact
        run: zip -9 -rq tawkto-live-chat.zip tawkto

      - name: run tests
        env:
          TAWK_PROPERTY_ID: ${{ secrets.TAWK_PROPERTY_ID }}
          TAWK_WIDGET_ID: ${{ secrets.TAWK_WIDGET_ID }}
          TAWK_USERNAME: ${{ secrets.TAWK_USERNAME }}
          TAWK_PASSWORD: ${{ secrets.TAWK_PASSWORD }}
          WEB_HOST: localhost
          WEB_PORT: 8000
          SELENIUM_BROWSER: ${{ matrix.browser }}
          SELENIUM_HOST: ${{ env.BROWSERSTACK_USERNAME }}:${{ env.BROWSERSTACK_ACCESS_KEY }}@hub-cloud.browserstack.com
          SELENIUM_HTTPS_FLAG: 'true'
          SELENIUM_HUB_FLAG: 'true'
        run: composer run test

      - name: 'Stop BrowserStackLocal'
        if: always()
        uses: 'browserstack/github-actions/setup-local@master'
        with:
          local-testing: 'stop'
